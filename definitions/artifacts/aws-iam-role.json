{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$md": {
    "access": "public",
    "defaultTargetConnectionGroup": "credentials",
    "defaultTargetConnectionGroupLabel": "AWS IAM Role",
    "importing": {
      "group": "authentication"
    },
    "diagram": {
      "isLinkable": false
    },
    "cloud": {
      "id": "aws",
      "regions": [
        {
          "code": "us-east-2",
          "name": "US East (Ohio)"
        },
        {
          "code": "us-east-1",
          "name": "US East (N. Virginia)"
        },
        {
          "code": "us-west-1",
          "name": "US West (N. California)"
        },
        {
          "code": "us-west-2",
          "name": "US West (Oregon)"
        },
        {
          "code": "af-south-1",
          "name": "Africa (Cape Town)",
          "restrictions": "opt-in"
        },
        {
          "code": "ap-east-1",
          "name": "Asia Pacific (Hong Kong)",
          "restrictions": "opt-in"
        },
        {
          "code": "ap-south-2",
          "name": "Asia Pacific (Hyderabad)",
          "restrictions": "opt-in"
        },
        {
          "code": "ap-southeast-3",
          "name": "Asia Pacific (Jakarta)",
          "restrictions": "opt-in"
        },
        {
          "code": "ap-southeast-4",
          "name": "Asia Pacific (Melbourne)",
          "restrictions": "opt-in"
        },
        {
          "code": "ap-south-1",
          "name": "Asia Pacific (Mumbai)"
        },
        {
          "code": "ap-northeast-3",
          "name": "Asia Pacific (Osaka)"
        },
        {
          "code": "ap-northeast-2",
          "name": "Asia Pacific (Seoul)"
        },
        {
          "code": "ap-southeast-1",
          "name": "Asia Pacific (Singapore)"
        },
        {
          "code": "ap-southeast-2",
          "name": "Asia Pacific (Sydney)"
        },
        {
          "code": "ap-northeast-1",
          "name": "Asia Pacific (Tokyo)"
        },
        {
          "code": "ca-central-1",
          "name": "Canada (Central)"
        },
        {
          "code": "eu-central-1",
          "name": "Europe (Frankfurt)"
        },
        {
          "code": "eu-west-1",
          "name": "Europe (Ireland)"
        },
        {
          "code": "eu-west-2",
          "name": "Europe (London)"
        },
        {
          "code": "eu-south-1",
          "name": "Europe (Milan)",
          "restrictions": "opt-in"
        },
        {
          "code": "eu-west-3",
          "name": "Europe (Paris)"
        },
        {
          "code": "eu-south-2",
          "name": "Europe (Spain)",
          "restrictions": "opt-in"
        },
        {
          "code": "eu-north-1",
          "name": "Europe (Stockholm)"
        },
        {
          "code": "eu-central-2",
          "name": "Europe (Zurich)",
          "restrictions": "opt-in"
        },
        {
          "code": "me-south-1",
          "name": "Middle East (Bahrain)",
          "restrictions": "opt-in"
        },
        {
          "code": "me-central-1",
          "name": "Middle East (UAE)",
          "restrictions": "opt-in"
        },
        {
          "code": "sa-east-1",
          "name": "South America (SÃ£o Paulo)"
        },
        {
          "code": "us-gov-east-1",
          "name": "AWS GovCloud (US-East)",
          "restrictions": "by-request"
        },
        {
          "code": "us-gov-west-1",
          "name": "AWS GovCloud (US-West)",
          "restrictions": "by-request"
        }
      ],
      "services": [
        {
          "code": "acm",
          "name": "acm"
        },
        {
          "code": "amplify",
          "name": "amplify"
        },
        {
          "code": "apigateway",
          "name": "apigateway"
        },
        {
          "code": "appconfig",
          "name": "appconfig"
        },
        {
          "code": "appflow",
          "name": "appflow"
        },
        {
          "code": "appmesh",
          "name": "appmesh"
        },
        {
          "code": "apprunner",
          "name": "apprunner"
        },
        {
          "code": "appstream",
          "name": "appstream"
        },
        {
          "code": "appsync",
          "name": "appsync"
        },
        {
          "code": "aps",
          "name": "aps"
        },
        {
          "code": "athena",
          "name": "athena"
        },
        {
          "code": "auditmanager",
          "name": "auditmanager"
        },
        {
          "code": "autoscaling",
          "name": "autoscaling"
        },
        {
          "code": "backup",
          "name": "backup"
        },
        {
          "code": "batch",
          "name": "batch"
        },
        {
          "code": "budgets",
          "name": "budgets"
        },
        {
          "code": "cassandra",
          "name": "cassandra"
        },
        {
          "code": "cloud9",
          "name": "cloud9"
        },
        {
          "code": "cloudformation",
          "name": "cloudformation"
        },
        {
          "code": "cloudfront",
          "name": "cloudfront"
        },
        {
          "code": "cloudtrail",
          "name": "cloudtrail"
        },
        {
          "code": "cloudwatch",
          "name": "cloudwatch"
        },
        {
          "code": "codeartifact",
          "name": "codeartifact"
        },
        {
          "code": "codebuild",
          "name": "codebuild"
        },
        {
          "code": "codedeploy",
          "name": "codedeploy"
        },
        {
          "code": "codepipeline",
          "name": "codepipeline"
        },
        {
          "code": "config",
          "name": "config"
        },
        {
          "code": "connect",
          "name": "connect"
        },
        {
          "code": "datasync",
          "name": "datasync"
        },
        {
          "code": "detective",
          "name": "detective"
        },
        {
          "code": "devicefarm",
          "name": "devicefarm"
        },
        {
          "code": "dms",
          "name": "dms"
        },
        {
          "code": "dynamodb",
          "name": "dynamodb"
        },
        {
          "code": "ec2",
          "name": "ec2"
        },
        {
          "code": "ecr",
          "name": "ecr"
        },
        {
          "code": "ecs",
          "name": "ecs"
        },
        {
          "code": "eks",
          "name": "eks"
        },
        {
          "code": "elasticbeanstalk",
          "name": "elasticbeanstalk"
        },
        {
          "code": "elasticloadbalancing",
          "name": "elasticloadbalancing"
        },
        {
          "code": "events",
          "name": "events"
        },
        {
          "code": "evidently",
          "name": "evidently"
        },
        {
          "code": "fis",
          "name": "fis"
        },
        {
          "code": "forecast",
          "name": "forecast"
        },
        {
          "code": "frauddetector",
          "name": "frauddetector"
        },
        {
          "code": "globalaccelerator",
          "name": "globalaccelerator"
        },
        {
          "code": "glue",
          "name": "glue"
        },
        {
          "code": "groundstation",
          "name": "groundstation"
        },
        {
          "code": "guardduty",
          "name": "guardduty"
        },
        {
          "code": "healthlake",
          "name": "healthlake"
        },
        {
          "code": "iam",
          "name": "iam"
        },
        {
          "code": "imagebuilder",
          "name": "imagebuilder"
        },
        {
          "code": "iot",
          "name": "iot"
        },
        {
          "code": "iotanalytics",
          "name": "iotanalytics"
        },
        {
          "code": "iotevents",
          "name": "iotevents"
        },
        {
          "code": "iotsitewise",
          "name": "iotsitewise"
        },
        {
          "code": "iottwinmaker",
          "name": "iottwinmaker"
        },
        {
          "code": "iotwireless",
          "name": "iotwireless"
        },
        {
          "code": "ivs",
          "name": "ivs"
        },
        {
          "code": "kafkaconnect",
          "name": "kafkaconnect"
        },
        {
          "code": "kendra",
          "name": "kendra"
        },
        {
          "code": "kinesis",
          "name": "kinesis"
        },
        {
          "code": "kinesisvideo",
          "name": "kinesisvideo"
        },
        {
          "code": "kms",
          "name": "kms"
        },
        {
          "code": "lambda",
          "name": "lambda"
        },
        {
          "code": "lex",
          "name": "lex"
        },
        {
          "code": "lightsail",
          "name": "lightsail"
        },
        {
          "code": "logs",
          "name": "logs"
        },
        {
          "code": "lookoutmetrics",
          "name": "lookoutmetrics"
        },
        {
          "code": "lookoutvision",
          "name": "lookoutvision"
        },
        {
          "code": "mediaconnect",
          "name": "mediaconnect"
        },
        {
          "code": "mediapackage",
          "name": "mediapackage"
        },
        {
          "code": "mediatailor",
          "name": "mediatailor"
        },
        {
          "code": "networkmanager",
          "name": "networkmanager"
        },
        {
          "code": "panorama",
          "name": "panorama"
        },
        {
          "code": "personalize",
          "name": "personalize"
        },
        {
          "code": "qldb",
          "name": "qldb"
        },
        {
          "code": "rds",
          "name": "rds"
        },
        {
          "code": "redshift",
          "name": "redshift"
        },
        {
          "code": "resiliencehub",
          "name": "resiliencehub"
        },
        {
          "code": "robomaker",
          "name": "robomaker"
        },
        {
          "code": "route53",
          "name": "route53"
        },
        {
          "code": "route53resolver",
          "name": "route53resolver"
        },
        {
          "code": "rum",
          "name": "rum"
        },
        {
          "code": "s3",
          "name": "s3"
        },
        {
          "code": "sagemaker",
          "name": "sagemaker"
        },
        {
          "code": "secretsmanager",
          "name": "secretsmanager"
        },
        {
          "code": "servicecatalog",
          "name": "servicecatalog"
        },
        {
          "code": "servicediscovery",
          "name": "servicediscovery"
        },
        {
          "code": "ses",
          "name": "ses"
        },
        {
          "code": "shield",
          "name": "shield"
        },
        {
          "code": "signer",
          "name": "signer"
        },
        {
          "code": "sns",
          "name": "sns"
        },
        {
          "code": "sqs",
          "name": "sqs"
        },
        {
          "code": "ssm",
          "name": "ssm"
        },
        {
          "code": "transfer",
          "name": "transfer"
        },
        {
          "code": "waf",
          "name": "waf"
        },
        {
          "code": "wafv2",
          "name": "wafv2"
        },
        {
          "code": "workspaces",
          "name": "workspaces"
        },
        {
          "code": "xray",
          "name": "xray"
        }
      ]
    },
    "containerRepositories": {
      "label": "ECR",
      "cloud": "aws"
    },
    "dnsZones": {
      "label": "AWS Route 53",
      "cloud": "aws"
    },
    "name": "aws-iam-role"
  },
  "type": "object",
  "title": "AWS IAM Role",
  "description": "",
  "additionalProperties": false,
  "required": [
    "data",
    "specs"
  ],
  "properties": {
    "data": {
      "title": "Artifact Data",
      "type": "object",
      "required": [
        "arn"
      ],
      "properties": {
        "arn": {
          "$ref": "../types/aws-arn.json"
        },
        "external_id": {
          "type": "string",
          "title": "External ID",
          "description": "An external ID is a piece of data that can be passed to the AssumeRole API of the Security Token Service (STS). You can then use the external ID in the condition element in a role's trust policy, allowing the role to be assumed only when a certain value is present in the external ID."
        }
      }
    },
    "specs": {
      "title": "Artifact Specs",
      "type": "object",
      "properties": {
        "aws": {
          "$ref": "../specs/aws.json"
        }
      }
    }
  }
}
